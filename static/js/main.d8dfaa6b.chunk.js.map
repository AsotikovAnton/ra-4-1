{"version":3,"sources":["components/ColorConverter.js","hexToRgb.js","App.js","index.js"],"names":["ColorConverter","useState","hex","rgb","backgroundColor","colors","setColors","regexp","changeColors","target","value","length","prevColors","match","rgbColor","stringHex","result","exec","r","parseInt","g","b","hexToRgb","className","style","type","name","onChange","App","ReactDOM","render","document","getElementById"],"mappings":"6LAGe,SAASA,IAAkB,IAAD,EACXC,mBAAS,CACnCC,IAAK,IACLC,IAAK,GACLC,gBAAiB,YAJoB,mBAChCC,EADgC,KACxBC,EADwB,KAMjCC,EAAS,iBACTC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtB,GAAIA,EAAOC,MAAMC,OAAS,EACxBL,GAAU,SAACM,GAAD,sBAAsBA,EAAtB,CAAkCV,IAAKO,EAAOC,gBAI1D,GAAID,EAAOC,MAAMG,MAAMN,GAAS,CAC9B,IAAMO,ECjBG,SAAkBC,GAC/B,IAAMC,EAAS,4CAA4CC,KAAKF,GAChE,MAAO,CACLG,EAAGC,SAASH,EAAO,GAAI,IACvBI,EAAGD,SAASH,EAAO,GAAI,IACvBK,EAAGF,SAASH,EAAO,GAAI,KDYJM,CAASb,EAAOC,OACjCJ,EAAU,CACRJ,IAAKO,EAAOC,MACZP,IAAI,OAAD,OAASW,EAASI,EAAlB,aAAwBJ,EAASM,EAAjC,aAAuCN,EAASO,EAAhD,KACHjB,gBAAiBK,EAAOC,aAG1BJ,GAAU,SAACM,GAAD,sBAAsBA,EAAtB,CAAkCT,IAAK,8CAIrD,OACE,yBAAKoB,UAAU,gBAAgBC,MAAO,CAAEpB,gBAAiBC,EAAOD,kBAC9D,2BAAOqB,KAAK,OAAOC,KAAK,WAAWhB,MAAOL,EAAOH,IAAKyB,SAAUnB,IAChE,2BAAOiB,KAAK,OAAOC,KAAK,WAAWhB,MAAOL,EAAOF,IAAKwB,SAAUnB,KEnBvDoB,MARf,WACE,OACE,yBAAKL,UAAU,aACX,kBAACvB,EAAD,QCHR6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.d8dfaa6b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport hexToRgb from '../hexToRgb';\n\nexport default function ColorConverter() {\n  const [colors, setColors] = useState({\n    hex: '#',\n    rgb: '',\n    backgroundColor: '#000000',\n  });\n  const regexp = /#[a-f0-9]{6}/gi;\n  const changeColors = ({ target }) => {\n    if (target.value.length < 7) {\n      setColors((prevColors) => ({ ...prevColors, hex: target.value }));\n      return;\n    }\n\n    if (target.value.match(regexp)) {\n      const rgbColor = hexToRgb(target.value);\n      setColors({\n        hex: target.value,\n        rgb: `rgb(${rgbColor.r}, ${rgbColor.g}, ${rgbColor.b})`,\n        backgroundColor: target.value,\n      });\n    } else {\n      setColors((prevColors) => ({ ...prevColors, rgb: 'Ошибка!' }));\n    }\n  };\n\n  return (\n    <div className=\"color-element\" style={{ backgroundColor: colors.backgroundColor }}>\n      <input type=\"text\" name=\"hexColor\" value={colors.hex} onChange={changeColors} />\n      <input type=\"text\" name=\"rgbColor\" value={colors.rgb} onChange={changeColors} />\n    </div>\n  );\n}\n","export default function hexToRgb(stringHex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(stringHex);\n  return {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16),\n  };\n}\n","import React from 'react';\nimport './App.css';\nimport ColorConverter from './components/ColorConverter';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n        <ColorConverter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}